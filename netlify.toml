# NASA Space Weather Forecasting System - Netlify Configuration

[build]
  publish = "."
  command = "npm run build:prod"

[build.environment]
  NODE_VERSION = "18"
  PYTHON_VERSION = "3.11"

# Headers for security and performance
[[headers]]
  for = "/*"
  [headers.values]
    # Security headers
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdnjs.cloudflare.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https: wss: ws:; object-src 'none'; base-uri 'self'; form-action 'self';"
    
    # Performance headers
    Cache-Control = "public, max-age=31536000"

# Specific caching for HTML files
[[headers]]
  for = "/*.html"
  [headers.values]
    Cache-Control = "public, max-age=3600"

# Specific caching for assets
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# API endpoint redirects (if backend is separate)
[[redirects]]
  from = "/api/*"
  to = "https://nasa-space-weather-api.herokuapp.com/api/:splat"
  status = 200
  force = true

# SPA fallback for client-side routing
[[redirects]]
  from = "/*"
  to = "/dashboard_hub.html"
  status = 200
  condition = "Referer"

# Edge functions for real-time data
[[edge_functions]]
  function = "nasa-data-proxy"
  path = "/api/nasa/*"

# Environment variables (these would be set in Netlify dashboard)
[context.production.environment]
  NODE_ENV = "production"
  NASA_API_KEY = ""  # Set in Netlify dashboard
  ANTHROPIC_API_KEY = ""  # Set in Netlify dashboard

[context.deploy-preview.environment]
  NODE_ENV = "preview"

[context.branch-deploy.environment]
  NODE_ENV = "development"

# Functions (if using Netlify Functions)
[functions]
  directory = "netlify/functions"

# Build plugins
[[plugins]]
  package = "@netlify/plugin-lighthouse"
  
  [plugins.inputs.thresholds]
    performance = 0.9
    accessibility = 0.9
    best-practices = 0.9
    seo = 0.9

[[plugins]]
  package = "netlify-plugin-cypress"
  
  [plugins.inputs]
    enable = true

# Performance optimizations
[build.processing]
  skip_processing = false

[build.processing.css]
  bundle = true
  minify = true

[build.processing.js]
  bundle = true
  minify = true

[build.processing.html]
  pretty_urls = true

[build.processing.images]
  compress = true